#!/sbin/sh

OUTFD=/proc/self/fd/$2
fstab=/vendor/etc/fstab.qcom
use_product=0

main() {
    ui_print " "
    ui_print " "
    ui_print "             Bubun DFE"
    ui_print "      Disable Force Encryption"
    ui_print "             @msandypr"
    ui_print " "

    unmount_parts
    mount_parts
    patch_fstab

    ui_print ":: Unmounting filesystems..."
    unmount_parts
    ui_print " "
}

ui_print() {
    echo -e "ui_print $1\nui_print" >> "$OUTFD";
}

abort() {
    ui_print "$1"
    exit 1
}

mount_parts() {
    ui_print ":: Mounting vendor as writable..."
    mount -o ro -t auto /dev/block/mapper/vendor /vendor
    blockdev --setrw /dev/block/mapper/vendor
    mount -o remount,rw -t auto /vendor

    if [ ! -w $fstab ]; then
        ui_print "!! Failed, let's try on product instead,"
        ui_print "::  product as writable..."
        mount -o ro -t auto /dev/block/mapper/product /product
        blockdev --setrw /dev/block/mapper/product
        mount -o remount,rw -t auto /product || abort "!! Failed, aborting..."
        use_product=1
    fi
}

unmount_parts() {
    umount /product
    umount /vendor
}

patch_fstab() {
    if [ $use_product = 1 ]; then
        ui_print ":: Creating vendor_overlay on product"
        mkdir -p /product/vendor_overlay/30/etc
        cp $fstab /product/vendor_overlay/30/etc/fstab.qcom
        fstab=/product/vendor_overlay/30/etc/fstab.qcom
    else
        ui_print ":: Backup original fstab"
        cp $fstab ${fstab}.bak
        ui_print ":: Backup created: ${fstab}.bak"
    fi

    ui_print ":: Patching $fstab ..."
    sed -i 's|fileencryption=|encryptable=|g' $fstab
    sed -i 's|,avb=vbmeta_system,avb_keys=/avb/q-gsi.avbpubkey:/avb/r-gsi.avbpubkey:/avb/s-gsi.avbpubkey||g' $fstab
    sed -i 's|,avb=vbmeta_system||g;s|,avb||g;s|,quota||g' $fstab
}

main $@
exit 0
